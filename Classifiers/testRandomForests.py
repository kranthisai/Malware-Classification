import numpy as np
from sklearn.ensemble import RandomForestClassifier
#import neurolab as nl
import math
import cPickle


def main():  
    featureFile = open('C:/Users/Abhi/workspace/MalwareClassification/asmTestFeatures.csv', 'r')
    inp = featureFile.readlines()
    inp1=[]
    for line in inp:
        inp1.append(line.split(","))
    #print inp1[10868]
    inp1 = inp1[1:]
    #print inp1[0]
    labels = []
    for i in range(len(inp1)):
        labels.append(inp1[i][-1][:-1])
        inp1[i] = inp1[i][0:-1]
    #print len(labels[0])
    #print len(inp1)            
    for i in range(len(inp1)):
        for j in range (len(inp1[0])):
            inp1[i][j] = int(inp1[i][j])
     
    '''for i in range(len(inp1)):
        nConstant = sum(inp1[i])
        for j in range (len(inp1[0])):
            inp1[i][j] = inp1[i][j]/nConstant
    '''
    #print len(inp1)
    #print out
    
    inp2 = np.array(inp1)
    #print inp2
    
    with open('rf3', 'rb') as f:
        rf = cPickle.load(f)
    ans = rf.predict_proba(inp2)
    #print preds
    #print ans[0]
    '''for i in range(len(ans)):
        if round(ans[i] == 0.15:
            roundans.append(0.1)
        elif round(ans[i][0],3) <= 0.25:
            roundans.append(0.2)
        elif round(ans[i][0],3) <= 0.35:
            roundans.append(0.3)
        elif round(ans[i][0],3) <= 0.45:
            roundans.append(0.4)
        elif round(ans[i][0],3) <= 0.55:
            roundans.append(0.5)
        elif round(ans[i][0],3) <= 0.65:
            roundans.append(0.6)
        elif round(ans[i][0],3) <= 0.75:
            roundans.append(0.7)
        elif round(ans[i][0],3) <= 0.85:
            roundans.append(0.8)
        elif round(ans[i][0],3) <= 0.95:
            roundans.append(0.9)
        else:
            roundans.append(0.0)

    roundans = np.array(roundans)
    roundans = roundans.reshape(len(roundans),1)
    #print roundans'''
    #calculateError(roundans,tar)
    printprobs(labels,ans)
def printprobs(testlabels,probs):
    outputfile = open('C:/Users/Abhi/workspace/MalwareClassification/probs1.csv', 'w')
    outputfile.write('Id'+','+'Prediction1'+','+'Prediction2'+','+'Prediction3'+','+'Prediction4'+','+'Prediction5'+','+'Prediction6'+','+'Prediction7'+','+'Prediction8'+','+'Prediction9'+'\n')
    for i in range(len(probs)):
        outputfile.write(testlabels[i]+','+str(probs[i][0])+','+str(probs[i][1])+','+str(probs[i][2])+','+str(probs[i][3])+','+str(probs[i][4])+','+str(probs[i][5])+','+str(probs[i][6])+','+str(probs[i][7])+','+str(probs[i][8])+'\n')
  
def calculateError(simoutput,output):
    err=0
    classified=0
    notclassified =0
    for i in range(len(simoutput)):
        err += math.pow((simoutput[i][0]- output[i][0]),2)
        if simoutput[i][0] == output[i][0]:
            classified += 1
        else:
            notclassified +=1 
    err = err/len(simoutput)
    print err
    print classified
    print notclassified 
if __name__ == "__main__":
    main()

from sklearn.ensemble import RandomForestClassifier
import numpy as np
import cPickle

def main():  
    featureFile = open('C:/Users/Abhi/workspace/MalwareClassification/ASMDLLTESTFEATURES.csv', 'r')    
    inp = featureFile.readlines()
    #print len(inp)
    #print inp[0]
    #print inp[29]
    inp = inp[1:]
    inp1=[]
    for line in inp:
        inp1.append(line.split(","))
    #print inp1[0]
    #inp1 = inp1[2:]
    #inp1 = np.array(inp1)
    #print inp1
    labels=[]
    for i in range(len(inp1)):
        labels.append(inp1[i][0])
        inp1[i] = inp1[i][1:-1]
    #print inp1[0]
    #print len(labels), len(labels[0])
    #print len(inp1), len(inp1[0])
    #inp1 = np.array(inp1)
    #print len(inp1), len(inp1[0]), inp1[0][2999],'hi'
    for i in range(len(inp1)):
        for j in range (len(inp1[0])):
            inp1[i][j] = int(inp1[i][j])
    
    '''for i in range(len(inp1)):
        nConstant = sum(inp1[i])
        for j in range (len(inp1[0])):
            inp1[i][j] = inp1[i][j]/nConstant'''
     
    #print sum(inp1[0])
    '''inputset = inp1[:-3000]
    cvset = inp1[7867:]
    outCVset = out[7867:]
    outputset = out[:-3000]'''         
    inp2 = np.array(inp1)
    print inp2
    #out2 = np.array(outputset)
    #print inp2
    #print len(out2)
    #tar = out2.reshape(len(out2),1)
    #print len(inp2)
    #print len(tar),tar'''
    '''okCount=0
    notokCount=0
    for item in inp2:
        if sum(item)> 0.99:
            okCount += 1
        else:
            notokCount +=1
    print okCount
    print notokCount'''
    

    '''clf = RandomForestClassifier(n_estimators=1000)
    clf = clf.fit(inp2, out2)
    with open('rfFULLASM1', 'wb') as f:
        cPickle.dump(clf, f)
    print "network trained"'''
    
    with open('rfDLL', 'rb') as f:
        rf = cPickle.load(f)
    preds = rf.predict_proba(inp2)
    
    printprobs(labels, preds)
    print "done"

def printprobs(testlabels,probs):
    outputfile = open('C:/Users/Abhi/workspace/MalwareClassification/probs3.csv', 'w')
    outputfile.write('Id'+','+'Prediction1'+','+'Prediction2'+','+'Prediction3'+','+'Prediction4'+','+'Prediction5'+','+'Prediction6'+','+'Prediction7'+','+'Prediction8'+','+'Prediction9'+'\n')
    for i in range(len(probs)):
        outputfile.write(testlabels[i]+','+str(probs[i][0])+','+str(probs[i][1])+','+str(probs[i][2])+','+str(probs[i][3])+','+str(probs[i][4])+','+str(probs[i][5])+','+str(probs[i][6])+','+str(probs[i][7])+','+str(probs[i][8])+'\n')
    
    #print preds
    #calculateError(preds, outCVset)'''
def calculateError(simoutput,output):
    #err=0
    classified=0
    notclassified =0
    for i in range(len(simoutput)):
        if simoutput[i] == output[i]:
            classified += 1
        else:
            notclassified +=1 
    #err = err/len(simoutput)
    #print err'''
    print classified
    print notclassified

if __name__ =='__main__':
    main()
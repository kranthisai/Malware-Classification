import numpy as np
import neurolab as nl
import math

def main():  
    featureFile = open('C:/Users/Abhi/workspace/MalwareClassification/asmTestFeatures.csv', 'r')
    inp = featureFile.readlines()
    inp1=[]
    for line in inp:
        inp1.append(line.split(","))
    #print inp1[10868]
    inp1 = inp1[1:]
    #print inp1[0]
    labels = []
    for i in range(len(inp1)):
        labels.append(inp1[i][-1][:-1])
        inp1[i] = inp1[i][0:-1]
    print len(labels[0])
    print len(inp1)            
    for i in range(len(inp1)):
        for j in range (len(inp1[0])):
            inp1[i][j] = float(inp1[i][j])
     
    for i in range(len(inp1)):
        nConstant = sum(inp1[i])
        for j in range (len(inp1[0])):
            inp1[i][j] = inp1[i][j]/nConstant
    
    #print len(inp1)
    #print out
    
    inp2 = np.array(inp1)
    #out2 = np.array(out)
    #tar = out2.reshape(len(out2),1)
    
    #print inp2
    #print len(inp2[0])
    #print tar
    #print len(inp2)
    #print len(tar)'''
    '''okCount=0
    notokCount=0
    for item in inp2:
        if sum(item)> 0.99:
            okCount += 1
        else:
            notokCount +=1
    print okCount
    print notokCount'''

    newnet = nl.load('classify4.net')
    print "fine"
    roundans=[]
    ans = newnet.sim(inp2)
    for i in range(len(ans)):
        if round(ans[i][0],3) <= 0.15:
            roundans.append(0.1)
        elif round(ans[i][0],3) <= 0.25:
            roundans.append(0.2)
        elif round(ans[i][0],3) <= 0.35:
            roundans.append(0.3)
        elif round(ans[i][0],3) <= 0.45:
            roundans.append(0.4)
        elif round(ans[i][0],3) <= 0.55:
            roundans.append(0.5)
        elif round(ans[i][0],3) <= 0.65:
            roundans.append(0.6)
        elif round(ans[i][0],3) <= 0.75:
            roundans.append(0.7)
        elif round(ans[i][0],3) <= 0.85:
            roundans.append(0.8)
        elif round(ans[i][0],3) <= 0.95:
            roundans.append(0.9)
        else:
            roundans.append(0.0)

    roundans = np.array(roundans)
    roundans = roundans.reshape(len(roundans),1)
    #print roundans
    #calculateError(roundans,tar)'''
    printprobs(labels,roundans)
def printprobs(testlabels,probs):
    outputfile = open('C:/Users/Abhi/workspace/MalwareClassification/probs.csv', 'w')
    outputfile.write('Id'+','+'Prediction1'+','+'Prediction2'+','+'Prediction3'+','+'Prediction4'+','+'Prediction5'+','+'Prediction6'+','+'Prediction7'+','+'Prediction8'+','+'Prediction9'+'\n')
    for i in range(len(probs)):
        if probs[i][0] == 0.1:
            outputfile.write(testlabels[i]+','+'0.99'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+'\n')
        elif probs[i][0] == 0.2:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.99'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+'\n')   
        elif probs[i][0] == 0.3:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.1'+','+'0.99'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+'\n')
        elif probs[i][0] == 0.4:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.99'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+'\n')
        elif probs[i][0] == 0.5:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.99'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+'\n')
        elif probs[i][0] == 0.6:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.99'+','+'0.1'+','+'0.1'+','+'0.1'+'\n')
        elif probs[i][0] == 0.7:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.99'+','+'0.1'+','+'0.1'+'\n')
        elif probs[i][0] == 0.8:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.99'+','+'0.1'+'\n')
        elif probs[i][0] == 0.9:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.99'+'\n')
        else:
            outputfile.write(testlabels[i]+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+','+'0.1'+'\n')
    
    
def calculateError(simoutput,output):
    err=0
    classified=0
    notclassified =0
    for i in range(len(simoutput)):
        err += math.pow((simoutput[i][0]- output[i][0]),2)
        if simoutput[i][0] == output[i][0]:
            classified += 1
        else:
            notclassified +=1 
    err = err/len(simoutput)
    print err
    print classified
    print notclassified 
if __name__ == "__main__":
    main()

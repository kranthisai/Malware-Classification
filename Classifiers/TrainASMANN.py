import numpy as np
import neurolab as nl
import math

def main():  
    featureFile = open('C:/Users/Abhi/workspace/MalwareClassification/asmFeatures.csv', 'r')    
    inp = featureFile.readlines()
    
    #print inp[1]
    #print inp[29]
    inp1=[]
    out=[]
    for line in inp:
        inp1.append(line.split(","))
    #print inp1[10868]
    inp1 = inp1[1:]
    for i in range(len(inp1)):
        #print float(inp1[i][42])
        out.append(float(inp1[i][42])/10)
        inp1[i] = inp1[i][0:-2]
                
    for i in range(len(inp1)):
        for j in range (len(inp1[0])):
            inp1[i][j] = float(inp1[i][j])
     
    for i in range(len(inp1)):
        nConstant = sum(inp1[i])
        for j in range (len(inp1[0])):
            inp1[i][j] = inp1[i][j]/nConstant
     
    #print sum(inp1[0])        
    inp2 = np.array(inp1)
    out2 = np.array(out)
    tar = out2.reshape(len(out2),1)
    #print len(inp2)
    #print len(tar),tar
    '''okCount=0
    notokCount=0
    for item in inp2:
        if sum(item)> 0.99:
            okCount += 1
        else:
            notokCount +=1
    print okCount
    print notokCount'''

    inp3 = [list(i) for i in zip(*inp1)]
    neuinp=[]
    for item in inp3:
        neuinp.append([-0.5,0.5])
    #print neuinp

    net = nl.net.newff(neuinp,[15,1])
    print net.ci
    print net.co
    print len(net.layers)
    error = net.train(inp2, tar, epochs= 7000, show=100, goal=0.1)
    net.save('classify4.net')
    #newnet = nl.load('classify.net')
    print "fine"
    #print net.sim(inp2)
    #ans=[]
    #for item in inp2:
    #    ans.append(net.sim([item]))
    #print ans[0][0]
    #print ans
    #calculateError(ans,out)
    #print ans[0][0]'''

def calculateError(simoutput,output):
    err = 0
    for i in range(len(simoutput)):
        err += math.pow((simoutput[i][0]- output[i][0]),2)
    err = err/len(simoutput)
    print err
if __name__ == "__main__":
    main()
